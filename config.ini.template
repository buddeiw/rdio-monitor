# Rdio Scanner Monitor Configuration Template
# This template file supports environment variable substitution
# Variables in the format ${VARIABLE_NAME} or ${VARIABLE_NAME:-default_value} will be replaced

[rdio_scanner]
# Target Rdio Scanner domain configuration
# REQUIRED: Replace with your actual Rdio Scanner domain
domain = ${RDIO_SCANNER_DOMAIN:-https://your-rdio-scanner-domain.com}
api_path = ${RDIO_SCANNER_API_PATH:-/api/calls}
poll_interval = ${RDIO_SCANNER_POLL_INTERVAL:-30}
max_calls_per_request = ${RDIO_SCANNER_MAX_CALLS:-100}
auth_token = ${RDIO_SCANNER_AUTH_TOKEN:-}
user_agent = ${RDIO_SCANNER_USER_AGENT:-RdioMonitor/1.0}
request_timeout = ${RDIO_SCANNER_TIMEOUT:-30}
retry_attempts = ${RDIO_SCANNER_RETRY_ATTEMPTS:-3}
retry_delay = ${RDIO_SCANNER_RETRY_DELAY:-5}

[database]
# PostgreSQL database configuration
# Use environment variables for sensitive information
host = ${DATABASE_HOST:-localhost}
port = ${DATABASE_PORT:-5432}
database = ${DATABASE_NAME:-rdio_scanner}
username = ${DATABASE_USER:-scanner}
password = ${DATABASE_PASSWORD:-scanner_password}
pool_size = ${DATABASE_POOL_SIZE:-10}
connect_timeout = ${DATABASE_CONNECT_TIMEOUT:-30}
ssl_enabled = ${DATABASE_SSL_ENABLED:-false}
ssl_cert_path = ${DATABASE_SSL_CERT_PATH:-}
ssl_key_path = ${DATABASE_SSL_KEY_PATH:-}

[audio]
# Audio capture and storage configuration
enable_recording = ${AUDIO_ENABLE_RECORDING:-true}
storage_path = ${AUDIO_STORAGE_PATH:-/app/audio}
audio_format = ${AUDIO_FORMAT:-mp3}
audio_quality = ${AUDIO_QUALITY:-192}
max_file_size = ${AUDIO_MAX_FILE_SIZE_MB:-50}
retention_days = ${AUDIO_RETENTION_DAYS:-30}
enable_compression = ${AUDIO_ENABLE_COMPRESSION:-true}
compression_level = ${AUDIO_COMPRESSION_LEVEL:-5}
auto_gain_control = ${AUDIO_AUTO_GAIN_CONTROL:-true}
normalize_audio = ${AUDIO_NORMALIZE:-true}

[logging]
# Logging configuration
log_level = ${LOG_LEVEL:-INFO}
log_file = ${LOG_FILE:-/app/logs/scanner.log}
max_log_size = ${LOG_MAX_SIZE_MB:-100}
log_backup_count = ${LOG_BACKUP_COUNT:-5}
log_format = ${LOG_FORMAT:-%(asctime)s - %(name)s - %(levelname)s - %(message)s}
date_format = ${LOG_DATE_FORMAT:-%Y-%m-%d %H:%M:%S}
console_logging = ${LOG_CONSOLE_ENABLED:-true}
syslog_logging = ${LOG_SYSLOG_ENABLED:-false}
syslog_facility = ${LOG_SYSLOG_FACILITY:-local0}

[monitoring]
# System monitoring and health check configuration
health_check_interval = ${HEALTH_CHECK_INTERVAL:-60}
collect_metrics = ${COLLECT_METRICS:-true}
metrics_interval = ${METRICS_INTERVAL:-30}
email_notifications = ${EMAIL_NOTIFICATIONS_ENABLED:-false}
smtp_server = ${SMTP_SERVER:-smtp.gmail.com}
smtp_port = ${SMTP_PORT:-587}
smtp_username = ${SMTP_USERNAME:-}
smtp_password = ${SMTP_PASSWORD:-}
smtp_from_address = ${SMTP_FROM_ADDRESS:-rdio-monitor@your-domain.com}
email_recipients = ${EMAIL_RECIPIENTS:-admin@your-domain.com}
notify_on_errors = ${NOTIFY_ON_ERRORS:-true}
notify_on_disk_space = ${NOTIFY_ON_DISK_SPACE:-true}
disk_space_threshold = ${DISK_SPACE_THRESHOLD:-85}

[api]
# Internal API server configuration
enable_api = ${API_ENABLED:-true}
api_host = ${API_HOST:-0.0.0.0}
api_port = ${API_PORT:-8080}
api_auth_enabled = ${API_AUTH_ENABLED:-false}
api_auth_key = ${API_AUTH_KEY:-your_secure_api_key_here}
api_rate_limit = ${API_RATE_LIMIT:-1000}
enable_cors = ${API_CORS_ENABLED:-true}
cors_origins = ${API_CORS_ORIGINS:-*}

[security]
# Security configuration
ip_whitelist_enabled = ${SECURITY_IP_WHITELIST_ENABLED:-false}
allowed_ips = ${SECURITY_ALLOWED_IPS:-127.0.0.1,192.168.1.0/24}
request_signing = ${SECURITY_REQUEST_SIGNING:-false}
signing_key = ${SECURITY_SIGNING_KEY:-your_secret_signing_key_here}
rate_limiting = ${SECURITY_RATE_LIMITING:-true}
rate_limit_per_ip = ${SECURITY_RATE_LIMIT_PER_IP:-100}
ban_duration = ${SECURITY_BAN_DURATION:-60}

[backup]
# Backup configuration
enable_backups = ${BACKUP_ENABLED:-true}
backup_interval = ${BACKUP_INTERVAL_HOURS:-24}
backup_retention = ${BACKUP_RETENTION_DAYS:-7}
backup_path = ${BACKUP_PATH:-/app/backups}
backup_audio = ${BACKUP_INCLUDE_AUDIO:-false}
compress_backups = ${BACKUP_COMPRESS:-true}
remote_backup = ${REMOTE_BACKUP_ENABLED:-false}
remote_backup_dest = ${REMOTE_BACKUP_DESTINATION:-user@backup-server:/backup/rdio-monitor/}
remote_backup_key = ${REMOTE_BACKUP_SSH_KEY:-/app/.ssh/backup_key}

[performance]
# Performance tuning configuration
worker_processes = ${WORKER_PROCESSES:-4}
thread_pool_size = ${THREAD_POOL_SIZE:-10}
connection_pooling = ${CONNECTION_POOLING_ENABLED:-true}
max_connections = ${MAX_CONNECTIONS:-100}
connection_timeout = ${CONNECTION_TIMEOUT:-30}
request_queuing = ${REQUEST_QUEUING_ENABLED:-true}
max_queue_size = ${MAX_QUEUE_SIZE:-1000}
enable_caching = ${CACHING_ENABLED:-true}
cache_size = ${CACHE_SIZE_MB:-128}
cache_ttl = ${CACHE_TTL_SECONDS:-300}

[grafana]
# Grafana monitoring dashboard configuration
admin_user = ${GRAFANA_ADMIN_USER:-admin}
admin_password = ${GRAFANA_ADMIN_PASSWORD:-admin}
server_port = ${GRAFANA_SERVER_PORT:-3000}
server_host = ${GRAFANA_SERVER_HOST:-0.0.0.0}
anonymous_access = ${GRAFANA_ANONYMOUS_ACCESS:-false}
org_name = ${GRAFANA_ORG_NAME:-Rdio Monitor}
allow_sign_up = ${GRAFANA_ALLOW_SIGN_UP:-false}
session_timeout = ${GRAFANA_SESSION_TIMEOUT:-86400}
ldap_enabled = ${GRAFANA_LDAP_ENABLED:-false}
ldap_server = ${GRAFANA_LDAP_SERVER:-}
ldap_port = ${GRAFANA_LDAP_PORT:-389}
ldap_bind_dn = ${GRAFANA_LDAP_BIND_DN:-}
ldap_bind_password = ${GRAFANA_LDAP_BIND_PASSWORD:-}
ldap_search_base = ${GRAFANA_LDAP_SEARCH_BASE:-}

[alerts]
# Alert configuration for system monitoring
enable_alerts = ${ALERTS_ENABLED:-true}
alert_interval = ${ALERT_INTERVAL_SECONDS:-60}
db_connection_timeout = ${ALERT_DB_CONNECTION_TIMEOUT:-10}
api_response_timeout = ${ALERT_API_RESPONSE_TIMEOUT:-5}
disk_space_alert = ${ALERT_DISK_SPACE_PERCENT:-90}
memory_alert = ${ALERT_MEMORY_PERCENT:-85}
cpu_alert = ${ALERT_CPU_PERCENT:-80}
failed_requests_alert = ${ALERT_FAILED_REQUESTS_PER_MINUTE:-10}
audio_errors_alert = ${ALERT_AUDIO_ERRORS_PER_HOUR:-5}

[maintenance]
# System maintenance configuration
auto_cleanup = ${MAINTENANCE_AUTO_CLEANUP:-true}
cleanup_interval = ${MAINTENANCE_CLEANUP_INTERVAL_HOURS:-24}
temp_file_age = ${MAINTENANCE_TEMP_FILE_AGE_HOURS:-48}
log_cleanup_age = ${MAINTENANCE_LOG_CLEANUP_AGE_DAYS:-30}
db_vacuum_interval = ${MAINTENANCE_DB_VACUUM_INTERVAL_HOURS:-168}
auto_updates = ${MAINTENANCE_AUTO_UPDATES:-false}
update_check_interval = ${MAINTENANCE_UPDATE_CHECK_INTERVAL_HOURS:-24}
maintenance_mode = ${MAINTENANCE_MODE_ENABLED:-false}
maintenance_message = ${MAINTENANCE_MESSAGE:-System is currently under maintenance. Please try again later.}

# Container-specific environment variables
[container]
# These are automatically set by the container environment
container_name = ${HOSTNAME:-rdio-scanner-monitor}
container_id = ${CONTAINER_ID:-unknown}
pod_name = ${POD_NAME:-}
pod_namespace = ${POD_NAMESPACE:-}
node_name = ${NODE_NAME:-}

# Development/debugging configuration
[development]
debug_mode = ${DEBUG_MODE:-false}
mock_api_responses = ${MOCK_API_RESPONSES:-false}
disable_audio_processing = ${DISABLE_AUDIO_PROCESSING:-false}
enable_profiling = ${ENABLE_PROFILING:-false}
profile_output_dir = ${PROFILE_OUTPUT_DIR:-/app/profiles}

# Redis configuration (optional caching layer)
[redis]
enabled = ${REDIS_ENABLED:-false}
host = ${REDIS_HOST:-localhost}
port = ${REDIS_PORT:-6379}
password = ${REDIS_PASSWORD:-}
database = ${REDIS_DATABASE:-0}
ssl = ${REDIS_SSL:-false}
connection_timeout = ${REDIS_CONNECTION_TIMEOUT:-5}
socket_timeout = ${REDIS_SOCKET_TIMEOUT:-5}
max_connections = ${REDIS_MAX_CONNECTIONS:-10}

# Webhook notifications (alternative to email)
[webhooks]
enabled = ${WEBHOOKS_ENABLED:-false}
alert_webhook_url = ${WEBHOOK_ALERT_URL:-}
health_webhook_url = ${WEBHOOK_HEALTH_URL:-}
webhook_timeout = ${WEBHOOK_TIMEOUT:-10}
webhook_retry_attempts = ${WEBHOOK_RETRY_ATTEMPTS:-3}

# External integrations
[integrations]
# Slack integration
slack_enabled = ${SLACK_ENABLED:-false}
slack_webhook_url = ${SLACK_WEBHOOK_URL:-}
slack_channel = ${SLACK_CHANNEL:-#rdio-monitor}
slack_username = ${SLACK_USERNAME:-Rdio Monitor}

# Discord integration
discord_enabled = ${DISCORD_ENABLED:-false}
discord_webhook_url = ${DISCORD_WEBHOOK_URL:-}

# PagerDuty integration
pagerduty_enabled = ${PAGERDUTY_ENABLED:-false}
pagerduty_integration_key = ${PAGERDUTY_INTEGRATION_KEY:-}

# Telegram integration
telegram_enabled = ${TELEGRAM_ENABLED:-false}
telegram_bot_token = ${TELEGRAM_BOT_TOKEN:-}
telegram_chat_id = ${TELEGRAM_CHAT_ID:-}

# Note: After modifying this file, restart the service:
# In container: supervisorctl restart rdio-monitor
# Or rebuild and restart the container