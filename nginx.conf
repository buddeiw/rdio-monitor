# Nginx configuration for Rdio Scanner Monitor
# This configuration provides reverse proxy and load balancing
# for the monitoring system components

# Main configuration block
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker process configuration for optimal performance
worker_rlimit_nofile 65535;

events {
    # Use epoll for better performance on Linux
    use epoll;
    worker_connections 4096;
    multi_accept on;
    accept_mutex off;
}

http {
    # Basic HTTP configuration
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Character set
    charset utf-8;
    
    # Logging configuration with detailed format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   '$request_time $upstream_response_time';
    
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log detailed;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Buffer sizes
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    client_max_body_size 50m;
    large_client_header_buffers 4 16k;
    
    # Timeout settings
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        audio/mpeg
        audio/wav;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; media-src 'self'" always;
    
    # Rate limiting configuration
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=grafana:10m rate=20r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn conn_limit_per_ip 20;
    
    # Upstream servers configuration
    upstream grafana_backend {
        # Grafana instances
        server rdio-grafana:3000 max_fails=3 fail_timeout=30s weight=1;
        # Add more Grafana instances here for high availability
        # server rdio-grafana-2:3000 max_fails=3 fail_timeout=30s weight=1;
        
        # Health check and load balancing
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    upstream scanner_api_backend {
        # Scanner API instances
        server rdio-scanner-app:8080 max_fails=3 fail_timeout=30s weight=1;
        # Add more API instances here for scaling
        # server rdio-scanner-app-2:8080 max_fails=3 fail_timeout=30s weight=1;
        
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # SSL/TLS configuration (if using HTTPS)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Main server configuration
    server {
        listen 80;
        listen [::]:80;
        server_name rdio-monitor.local localhost;
        
        # Root directory for static files
        root /var/www/html;
        index index.html index.htm;
        
        # Security and performance headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Status endpoint for monitoring
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/24;  # Container network
            deny all;
        }
        
        # Grafana dashboard proxy
        location /grafana/ {
            # Rate limiting
            limit_req zone=grafana burst=50 nodelay;
            
            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # WebSocket support for Grafana live features
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeout configuration
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering configuration
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Remove trailing slash and proxy to Grafana
            rewrite ^/grafana/(.*)$ /$1 break;
            proxy_pass http://grafana_backend;
            
            # Handle errors gracefully
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        # Scanner API proxy
        location /api/ {
            # Rate limiting for API endpoints
            limit_req zone=api burst=100 nodelay;
            
            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout configuration for API calls
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Proxy to scanner API backend
            proxy_pass http://scanner_api_backend;
            
            # Handle errors
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        }
        
        # Audio files serving with proper caching
        location /audio/ {
            alias /var/lib/rdio-monitor/audio/;
            
            # Cache control for audio files
            expires 7d;
            add_header Cache-Control "public, immutable";
            
            # Security headers for media files
            add_header X-Content-Type-Options nosniff;
            
            # MIME type for audio files
            location ~* \.(mp3|wav|flac|aac)$ {
                add_header Content-Type audio/mpeg;
            }
            
            # Restrict access to audio files (optional)
            # allow 192.168.1.0/24;
            # deny all;
        }
        
        # Static files serving
        location /static/ {
            alias /var/www/html/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        # Documentation and help pages
        location /docs/ {
            alias /var/www/html/docs/;
            try_files $uri $uri/ =404;
        }
        
        # WebSocket proxy for real-time features
        location /ws/ {
            proxy_pass http://scanner_api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }
        
        # Default location for main application
        location / {
            # Rate limiting
            limit_req zone=general burst=20 nodelay;
            
            try_files $uri $uri/ @proxy_to_app;
        }
        
        # Fallback proxy to main application
        location @proxy_to_app {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_pass http://scanner_api_backend;
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /var/www/html/errors;
            internal;
        }
        
        location = /50x.html {
            root /var/www/html/errors;
            internal;
        }
        
        # Security: Block access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Security: Block access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # HTTPS server configuration (optional)
    # Uncomment and configure for SSL/TLS
    #
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name rdio-monitor.local;
    #     
    #     # SSL certificate configuration
    #     ssl_certificate /etc/nginx/ssl/server.crt;
    #     ssl_certificate_key /etc/nginx/ssl/server.key;
    #     
    #     # Include the same location blocks as HTTP server
    #     # ... (copy location blocks from above)
    # }
    
    # HTTP to HTTPS redirect (if using SSL)
    # server {
    #     listen 80;
    #     listen [::]:80;
    #     server_name rdio-monitor.local;
    #     return 301 https://$server_name$request_uri;
    # }
}

# Stream block for TCP/UDP load balancing (if needed)
# stream {
#     upstream postgresql_backend {
#         server rdio-postgresql:5432 max_fails=3 fail_timeout=30s;
#     }
#     
#     server {
#         listen 5432;
#         proxy_pass postgresql_backend;
#         proxy_timeout 1s;
#         proxy_responses 1;
#     }
# }