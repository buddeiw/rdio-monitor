# PostgreSQL Configuration for Rdio Scanner Monitor
# This configuration is optimized for time-series data workloads
# with frequent inserts and analytical queries

#------------------------------------------------------------------------------
# FILE LOCATIONS
#------------------------------------------------------------------------------

# Location of the data directory
#data_directory = '/var/lib/postgresql/data'

# Location of configuration files (this file)
#hba_file = '/var/lib/postgresql/data/pg_hba.conf'
#ident_file = '/var/lib/postgresql/data/pg_ident.conf'

# External PID file (can be used with systemd, etc.)
#external_pid_file = ''

#------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
#------------------------------------------------------------------------------

# Connection settings optimized for containerized deployment
listen_addresses = '*'          # Listen on all interfaces
port = 5432                     # Standard PostgreSQL port
max_connections = 200           # Increased for monitoring workload
superuser_reserved_connections = 3

# Authentication settings
#authentication_timeout = 1min
#password_encryption = md5
#ssl = off

# TCP settings for better network performance
tcp_keepalives_idle = 600       # 10 minutes
tcp_keepalives_interval = 30    # 30 seconds
tcp_keepalives_count = 3        # 3 attempts

#------------------------------------------------------------------------------
# RESOURCE USAGE (except WAL)
#------------------------------------------------------------------------------

# Memory settings optimized for container deployment
shared_buffers = 256MB          # 25% of container memory (assuming 1GB)
huge_pages = off                # Not typically available in containers
temp_buffers = 8MB              # Temporary table buffer
max_prepared_transactions = 0   # Not using prepared transactions

# Work memory settings for query operations
work_mem = 16MB                 # Memory for sort/hash operations
maintenance_work_mem = 128MB    # Memory for VACUUM, CREATE INDEX
max_stack_depth = 2MB           # Stack depth limit

# Background writer settings for better I/O performance
bgwriter_delay = 100ms          # Background writer sleep time
bgwriter_lru_maxpages = 200     # Max pages to write per round
bgwriter_lru_multiplier = 4.0   # Multiplier for next round

# Effective cache size (total system memory available for caching)
effective_cache_size = 1GB      # Hint for query planner

#------------------------------------------------------------------------------
# WRITE AHEAD LOG (WAL)
#------------------------------------------------------------------------------

synchronous_commit = on         # Wait for WAL write before commit
wal_sync_method = fsync         # Method for forcing WAL updates
full_page_writes = on           # Recover from partial page writes
wal_compression = on            # Compress full page writes
wal_buffers = 16MB             # WAL buffer size
wal_writer_delay = 200ms       # WAL writer sleep time
wal_writer_flush_after = 1MB   # Flush after this much WAL

# Checkpoint settings for better performance
checkpoint_timeout = 15min     # Maximum time between checkpoints
max_wal_size = 2GB            # Maximum WAL size before checkpoint
min_wal_size = 1GB            # Minimum WAL size to keep
checkpoint_completion_target = 0.7  # Target for checkpoint completion
checkpoint_flush_after = 256kB     # Flush after this much during checkpoint
checkpoint_warning = 30s           # Warn if checkpoints are too frequent

# Archive settings (disabled by default)
#archive_mode = off
#archive_command = ''
#archive_timeout = 0

#------------------------------------------------------------------------------
# REPLICATION
#------------------------------------------------------------------------------

# Replication settings (if needed for high availability)
max_wal_senders = 3             # Max concurrent WAL senders
max_replication_slots = 3       # Max replication slots
#hot_standby = on               # Enable hot standby
#wal_receiver_status_interval = 10s
#hot_standby_feedback = off
#wal_receiver_timeout = 60s
#wal_retrieve_retry_interval = 5s

#------------------------------------------------------------------------------
# QUERY TUNING
#------------------------------------------------------------------------------

# Planner settings optimized for time-series queries
enable_bitmapscan = on          # Enable bitmap scans
enable_hashagg = on             # Enable hash aggregation
enable_hashjoin = on            # Enable hash joins
enable_indexscan = on           # Enable index scans
enable_indexonlyscan = on       # Enable index-only scans
enable_material = on            # Enable materialization
enable_mergejoin = on           # Enable merge joins
enable_nestloop = on            # Enable nested loop joins
enable_seqscan = on             # Enable sequential scans
enable_sort = on                # Enable sorts
enable_tidscan = on             # Enable TID scans

# Planner cost constants
seq_page_cost = 1.0             # Sequential page read cost
random_page_cost = 1.1          # Random page read cost (SSD optimized)
cpu_tuple_cost = 0.01           # CPU cost per tuple processed
cpu_index_tuple_cost = 0.005    # CPU cost per index tuple processed
cpu_operator_cost = 0.0025      # CPU cost per operator/function

# Planner search configuration
geqo = on                       # Enable genetic query optimization
geqo_threshold = 12             # Use GEQO for queries with this many tables
geqo_effort = 5                 # GEQO effort (1-10)
geqo_pool_size = 0              # GEQO pool size (0 = auto)
geqo_generations = 0            # GEQO generations (0 = auto)

# Other planner settings
default_statistics_target = 100  # Statistics target for columns
constraint_exclusion = partition # Enable constraint exclusion
cursor_tuple_fraction = 0.1      # Fraction of cursor query results
from_collapse_limit = 8          # Limit for FROM clause collapsing
join_collapse_limit = 8          # Limit for explicit JOIN collapsing

#------------------------------------------------------------------------------
# ERROR REPORTING AND LOGGING
#------------------------------------------------------------------------------

# Logging configuration for monitoring and debugging
log_destination = 'stderr'       # Where to log
logging_collector = off          # Not needed in containers
#log_directory = 'pg_log'
#log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
#log_file_mode = 0600
#log_truncate_on_rotation = off
#log_rotation_age = 1d
#log_rotation_size = 10MB

# What to log
log_min_messages = warning       # Log level for server log
log_min_error_statement = error  # Log level for error statements
log_min_duration_statement = 1000  # Log statements taking longer than 1s

# Connection and authentication logging
log_connections = on             # Log connections
log_disconnections = on          # Log disconnections
log_hostname = off               # Don't resolve hostnames
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

# Statement logging for performance monitoring
log_statement = 'none'           # Don't log all statements (too verbose)
log_replication_commands = off   # Don't log replication commands
log_checkpoints = on             # Log checkpoint activity
log_lock_waits = on              # Log lock waits
log_temp_files = 10MB           # Log temp files larger than 10MB
log_autovacuum_min_duration = 0  # Log all autovacuum activity

# Process title updates
update_process_title = on        # Update process title

#------------------------------------------------------------------------------
# RUNTIME STATISTICS
#------------------------------------------------------------------------------

# Statistics collection for monitoring
track_activities = on            # Track activity statistics
track_counts = on               # Track table/index access counts
track_io_timing = on            # Track I/O timing statistics
track_functions = pl            # Track PL/pgSQL function calls
stats_temp_directory = 'pg_stat_tmp'  # Temporary statistics directory

#------------------------------------------------------------------------------
# AUTOVACUUM PARAMETERS
#------------------------------------------------------------------------------

# Autovacuum settings optimized for high-write workloads
autovacuum = on                 # Enable autovacuum
log_autovacuum_min_duration = 0 # Log all autovacuum activity
autovacuum_max_workers = 4      # Maximum autovacuum worker processes
autovacuum_naptime = 30s        # Sleep time between autovacuum runs
autovacuum_vacuum_threshold = 50     # Minimum number of tuple updates/deletes before vacuum
autovacuum_analyze_threshold = 50    # Minimum number of tuple inserts/updates/deletes before analyze
autovacuum_vacuum_scale_factor = 0.1    # Fraction of table size to add to threshold
autovacuum_analyze_scale_factor = 0.05  # Fraction of table size to add to threshold
autovacuum_freeze_max_age = 200000000   # Maximum XID age before forced vacuum
autovacuum_multixact_freeze_max_age = 400000000  # Maximum multixact age before forced vacuum
autovacuum_vacuum_cost_delay = 10ms     # Autovacuum cost delay
autovacuum_vacuum_cost_limit = 200      # Autovacuum cost limit

#------------------------------------------------------------------------------
# CLIENT CONNECTION DEFAULTS
#------------------------------------------------------------------------------

# Statement behavior
search_path = 'rdio_monitor, public'  # Schema search path
default_tablespace = ''         # Default tablespace
temp_tablespaces = ''           # Temporary tablespaces

# Locale and formatting
datestyle = 'iso, mdy'          # Date/time formatting
intervalstyle = 'postgres'      # Interval formatting
timezone = 'UTC'                # Time zone (always use UTC for logs)
timezone_abbreviations = 'Default'
extra_float_digits = 0          # Extra digits for float output
client_encoding = utf8          # Character encoding

# Shared library preloading
shared_preload_libraries = 'pg_stat_statements'  # Preload statistics extension
#local_preload_libraries = ''
#session_preload_libraries = ''

# Other defaults
dynamic_library_path = '$libdir'
gin_fuzzy_search_limit = 0      # GIN fuzzy search limit

#------------------------------------------------------------------------------
# LOCK MANAGEMENT
#------------------------------------------------------------------------------

# Lock configuration
deadlock_timeout = 1s           # Deadlock detection timeout
max_locks_per_transaction = 64  # Maximum locks per transaction
max_pred_locks_per_transaction = 64  # Maximum predicate locks per transaction
max_pred_locks_per_relation = -2     # Maximum predicate locks per relation
max_pred_locks_per_page = 2          # Maximum predicate locks per page

#------------------------------------------------------------------------------
# VERSION/PLATFORM COMPATIBILITY
#------------------------------------------------------------------------------

# Array and regex settings
array_nulls = on                # Enable array null elements
backslash_quote = safe_encoding # Backslash quote behavior
default_with_oids = off         # Create tables with OIDs by default
escape_string_warning = on      # Warn about backslash escapes
lo_compat_privileges = off      # Large object compatibility
operator_precedence_warning = off
quote_all_identifiers = off
sql_inheritance = on            # SQL inheritance behavior
standard_conforming_strings = on
synchronize_seqscans = on       # Synchronize sequential scans

#------------------------------------------------------------------------------
# ERROR HANDLING
#------------------------------------------------------------------------------

exit_on_error = off             # Don't exit on error
restart_after_crash = on       # Restart after backend crash

#------------------------------------------------------------------------------
# EXTENSIONS CONFIGURATION
#------------------------------------------------------------------------------

# pg_stat_statements extension configuration
pg_stat_statements.max = 10000           # Maximum number of statements tracked
pg_stat_statements.track = all           # Track all statements
pg_stat_statements.track_utility = on    # Track utility commands
pg_stat_statements.save = on             # Save statistics across restarts

#------------------------------------------------------------------------------
# CUSTOM SETTINGS FOR RDIO MONITOR
#------------------------------------------------------------------------------

# Application-specific settings
# These are custom settings for the Rdio Scanner Monitor application

# Increase statement timeout for long-running queries
statement_timeout = 300000      # 5 minutes (in milliseconds)
lock_timeout = 60000           # 1 minute lock timeout
idle_in_transaction_session_timeout = 3600000  # 1 hour

# Connection pooling settings
tcp_user_timeout = 30000       # 30 seconds TCP user timeout

# Parallel query settings (if supported)
max_parallel_workers = 4        # Maximum parallel workers
max_parallel_workers_per_gather = 2  # Maximum parallel workers per gather
max_parallel_maintenance_workers = 2  # Maximum parallel maintenance workers
min_parallel_table_scan_size = 8MB    # Minimum table size for parallel scan
min_parallel_index_scan_size = 512kB  # Minimum index size for parallel scan
parallel_tuple_cost = 0.1             # Cost of parallel tuple processing
parallel_setup_cost = 1000.0          # Cost of parallel setup

# JIT compilation settings (disable for stability in containers)
jit = off                      # Disable JIT compilation
jit_above_cost = -1            # Disable JIT above cost
jit_inline_above_cost = -1     # Disable JIT inlining above cost
jit_optimize_above_cost = -1   # Disable JIT optimization above cost

#------------------------------------------------------------------------------
# MONITORING AND ALERTING
#------------------------------------------------------------------------------

# Settings for monitoring extensions
shared_preload_libraries = 'pg_stat_statements'
pg_stat_statements.track_planning = on  # Track planning time

# Custom monitoring views and functions can be added here
# These would typically be created via SQL scripts

#------------------------------------------------------------------------------
# BACKUP AND RECOVERY
#------------------------------------------------------------------------------

# Archive command for continuous archiving (customize as needed)
#archive_mode = on
#archive_command = 'rsync -a %p backup_server:/backup/wal/%f'
#archive_timeout = 60           # Force archive every 60 seconds

# Recovery settings
#restore_command = 'rsync -a backup_server:/backup/wal/%f %p'
#recovery_target_timeline = 'latest'

#------------------------------------------------------------------------------
# DEVELOPMENT AND TESTING OVERRIDES
#------------------------------------------------------------------------------

# These settings can be overridden for development environments
# Uncomment and modify as needed for testing

# Development logging (more verbose)
#log_min_messages = info
#log_statement = 'all'
#log_min_duration_statement = 0

# Development memory settings (lower for development)
#shared_buffers = 128MB
#work_mem = 4MB
#maintenance_work_mem = 64MB

# Disable fsync for development (NEVER in production)
#fsync = off
#synchronous_commit = off
#full_page_writes = off

#------------------------------------------------------------------------------
# CONTAINER OPTIMIZATIONS
#------------------------------------------------------------------------------

# Container-specific optimizations
huge_pages = off               # Disable huge pages (not available in containers)
unix_socket_directories = ''   # Use TCP only in containers
unix_socket_group = ''
unix_socket_permissions = 0777

# Optimize for containerized networking
tcp_keepalives_idle = 600      # 10 minutes
tcp_keepalives_interval = 30   # 30 seconds  
tcp_keepalives_count = 3       # 3 attempts

# Memory overcommit handling
vm_overcommit_memory = 2       # Don't overcommit
vm_swappiness = 1              # Minimize swapping

# Note: Some settings in this file may require PostgreSQL restart
# Settings marked with # require server restart
# Settings without # can be reloaded with SELECT pg_reload_conf();